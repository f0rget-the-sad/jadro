[package]
name = "jadro"
version = "0.1.0"
edition = "2018"

[dependencies]
# The bootimage tool performs the following steps behind the scenes:
# - It compiles our kernel to an ELF file
# - It compiles the bootloader dependency as a standalone executable
# - It links the bytes of the kernel ELF file to the bootloader
# When booted, the bootloader reads and parses the appended ELF file. It then
# maps the program segments to virtual addresses in the page tables, zeroes the
# .bss section, and sets up a stack. Finally, it reads the entry point address
# (our _start function) and jumps to it.
# TODO: replace it with own UEFI bootloader
bootloader = "0.9.8"
volatile = "0.2.6"
lazy_static = {version = "1.0", features = ["spin_no_std"]}
spin = "0.5.2"
x86_64 = "0.14.2"
uart_16550 = "0.2.0"

[package.metadata.bootimage]
test-args = [
    "-device", "isa-debug-exit,iobase=0xf4,iosize=0x04",
    "-serial", "stdio", "-display", "none",
]

test-success-exit-code = 33         # (0x10 << 1) | 1
test-timeout = 5          # (in seconds)


[[test]]
name = "should_panic"
harness = false
